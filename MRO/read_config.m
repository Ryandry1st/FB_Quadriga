function [no_rx, initial_loc, heading, speed, total_time, fs, fc, no_tx, N_SECTORS, orientations, tx_pos, Tx_P_dBm, sim_num, scen, seed] = read_config(config_file)
% Provide a method of inputing configurations quickly
% config file should be of the format generated by gen_config

%   config_file = 'simulation_config.txt';
if all(config_file(end -3:end) == '.txt')
    a = fopen(config_file, 'r');
    A = fscanf(a, '%c');
    nums = str2double(regexp(A, '-*\d*[\.]*\d*', 'match'));
    no_rx = nums(1);
    nums = nums(2:end);

    for i = 1:no_rx
        nums = nums(2:end); % remove header
        initial_loc(i, :) = nums(1:3);
        velocity2 = nums(5:7);
        nums = nums(14:end);
        heading(i) = atan2(velocity2(2), velocity2(1));
        speed(i) = norm(velocity2);
    end

    no_tx = nums(1);
    nums = nums(2:end);

    for i = 1:no_tx
        nums = nums(2:end); % remove header
        N_SECTORS = nums(5);
        tx_pos(i, :) = nums(1:3);
        orientations(N_SECTORS*(i - 1)+1:i*N_SECTORS, 2) = nums(7:9);
        orientations(N_SECTORS*(i - 1)+1:i*N_SECTORS, 1) = nums(11:13);

        nums = nums(22:end);
    end

    fc = nums(1);
    fs = nums(2);
    total_time = nums(3) / fs;

else % json file instead
    % Rewrite for new format
    info = jsondecode(fileread(config_file));
    no_rx = numel(info.UE);
    for i = 1:no_rx
        initial_loc(i, :) = info.UE(i).initial_position;
        velocity = info.UE(i).velocity;
        heading(i) = atan2(velocity(2), velocity(1));
        speed(i) = norm(velocity);
    end
    total_time = info.simulation.simulation_duration_s;
    fs = info.simulation.sampling_frequency_hz;
    fc = info.simulation.carrier_frequency_hz;
    no_tx = numel(info.BS);
    for i = 1:no_tx
        N_SECTORS(i) = info.BS(i).number_of_sectors;
        orientations(N_SECTORS(i)*(i - 1)+1:i*N_SECTORS(i), 2) = info.BS(i).azimuth_rotations_degrees';
        orientations(N_SECTORS(i)*(i - 1)+1:i*N_SECTORS(i), 1) = info.BS(i).downtilts_degrees';
        tx_pos(i, :) = info.BS(i).location';
        Tx_P_dBm(i, :) = info.BS(i).tx_p_dbm';
    end
    sim_num = info.simulation.sim_num;
    scen = info.simulation.scenario;
    seed = info.simulation.seed;
end
end
