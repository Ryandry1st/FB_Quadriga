% Provide a method of inputing configurations quickly
% config file should be of the format generated by gen_config
config_file = 'config.json';

info = jsondecode(fileread(config_file));
sim_style = 1 - info.simulation.CCO_0_MRO_1;
no_rx = numel(info.UE);

if ~sim_style
    for i = 1:no_rx
        initial_loc(i, :) = info.UE(i).initial_position;
        velocity = info.UE(i).velocity;
        heading(i) = atan2(velocity(2), velocity(1));
        speed(i) = norm(velocity);
    end
    total_time = info.simulation.simulation_duration_s;
    fs = info.simulation.sampling_frequency_hz;
end

fc = info.simulation.carrier_frequency_Mhz * 1e6;
no_tx = numel(info.BS);
no_sectors = info.BS(1).number_of_sectors;

tx_antenna_3gpp_macro.phi_3dB = info.BS(1).azimuth_beamwidth_degrees;
tx_antenna_3gpp_macro.theta_3dB = info.BS(1).elevation_beamwidth_degrees;
tx_antenna_3gpp_macro.rear_gain = -info.BS(1).front_to_back_ratio;

tx_pwr_dBm = info.BS(1).tx_p_dbm(1);
for i = 1:no_tx
    orientations(no_sectors*(i - 1)+1:i*no_sectors, 1) = info.BS(i).azimuth_rotations_degrees';
    orientations(no_sectors*(i - 1)+1:i*no_sectors, 2) = info.BS(i).downtilts_degrees';
    tx_pos(i, :) = info.BS(i).location';
end
sim_num = info.simulation.sim_num;
scen = info.simulation.scenario;
seed = info.simulation.seed;
if isfield(info.simulation, 'isd')
    if isnumeric(info.simulation.isd)
        isd = info.simulation.isd;
    end
end

rng('default');
rng(seed);

%% Need to add
% reading for antenna models -- '3gpp-macro', 'omni' will be first
sample_distance = info.simulation.sample_distance;
no_rx_min = info.simulation.no_rx_min;
if strcmp(info.simulation.BS_drop, 'hex') || strcmp(info.simulation.BS_drop, 'rnd') || strcmp(info.simulation.BS_drop, 'csv')
    BS_drop = info.simulation.BS_drop; % should be 'hex', 'rnd', 'csv'
    no_tx = info.simulation.no_tx; % overwrite the tx field

    if numel(info.simulation.batch_tilts) == 0
        error("You need to set the batch_tilts to run BS_dro[");
    elseif numel(info.simulation.batch_tilts) == 1
        % overwrite the downtilts with a single value and run once
        fprintf("Setting all downtilts to %i\n", info.simulation.batch_tilts);
        downtilt = info.simulation.batch_tilts;
        orientations = [];
        sim_style = 1;
    else
        % eventually add support for batch job
        fprintf(['Batch job requested for downtilts =[', num2str(info.simulation.batch_tilts'), ']\n']);
        orientations = [];
        sim_style = 2;

    end
else
    BS_drop = 0; % If 0, then don't overwrite the placements
    fprintf("Using pre-defined BS\n");
end

ps = parallel.Settings;
if ~info.simulation.parallel
    ps.Pool.AutoCreate = false;
    poolobj = gcp('nocreate');
    delete(poolobj);
else
    ps.Pool.AutoCreate = true;
    gcp;
end